package bitcamp.java100;
public class Test11_9 {
      
    public static void main(String[] args){

        // 부동소수점을 2진수로 바꿀때 딱 맞아 떨어지는 경우
        System.out.println(12.375); 
        
        // 부동소수점을 2진수로 바꿀때 계속 값이 무한 반복 되는 경우
        // -> 이런 경우 가수부의 크기만큼만 저장하고 나머지는 자른다.
        System.out.println(12.117); 
        
        //부동소수점값이 완전히 2진수롭 바뀌지 못하는 또 다른 예 :
        // -> 계산 결과가 이상하게 출력된다. ->보정 코드 추가
        System.out.println(214500/1.1); 
    }

}

/* 부동소수점을 메모리에 저장
  - 2진수로 표현이 가능해야만 메모리에 저장할 수 있다. 
  - 이 조건은 어떤 데이터에 대해서도 동일하다.
  - 즉 음성, 화면, 촉각, 미각의 값을 메모리에 저장하고 싶다면, 
    2진수로 표현이 가능해야 한다.
  - 부동소수점을 2진수로 표현하는 법칙을 정의한 문서가 "IEEE-754"이다.
  - IEE-754 : 부동소수점을 32비트와 64비트로 표현하는 방법에 대해 정의하고 있다.
  - 32비트로 표현하는 방법을 "single-precision(정밀도 1; 단정도)"이라 한다.
  - 64비트로 표현하는 방법은 32비트에 대비해 두 배 가량 더정밀하게 표현할 수      있다고 해서 "double precision(정밀도가 두 배; 배정도)"이라 한다.
  
  - 부동소수점을 2진수로 표현하는 방법
  - 32비트 기준으로 설명한다.
  - 1비트 : 부호비트
  - 23비트 : 가수부
  - 8비트 : 지수부
    
  */